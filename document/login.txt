package services;

import db.Dbcon;
import helloworld.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.EJB;
import javax.ejb.Stateless;

import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

@Stateless
@Path("/login1.json")
public class login1 {

    @EJB
    private NameStorageBean nameStorage;

    /**
     * PUT method for updating an instance of HelloWorldResource
     * @param content representation for the resource
     * @return an HTTP response with content of the updated or created resource.
     */
    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces("text/html")
    public Response putXml(String data) {


        JSONObject responseData = new JSONObject();
        try {


            JSONParser parserobject = new JSONParser();
            System.out.println(data);
            JSONObject dataobject = (JSONObject) parserobject.parse(data);

            if (dataobject.get("username") == null || dataobject.get("password") == null) {
                responseData.put("result", false);
                responseData.put("description", "enter username and password");
                return Response.status(201).entity(responseData.toJSONString()).build();

            } else {

                String username = (String) dataobject.get("username");
                String pass = (String) dataobject.get("password");
                Dbcon db = new Dbcon();
                String sql = "select * from tbl_student where id='" + username + "' and password='" + pass + "'";
                ResultSet rs = db.select(sql);
                if (rs.next()) {
                    
                    JSONObject payloadjson = new JSONObject();
                    payloadjson.put("username", rs.getString("id"));
                    payloadjson.put("name", rs.getString("name"));
                    payloadjson.put("email", rs.getString("email"));
                   
                   
                        responseData.put("result", true);
                        responseData.put("description", "login success");
                        responseData.put("payload",payloadjson);
                        
                        return Response.status(201).entity(responseData.toJSONString()).build();
                        
                } else{
                    responseData.put("result", false);
                        responseData.put("description", "invalid username and password");
                    return Response.status(201).entity(responseData.toJSONString()).build();
                }
            }
            

        } catch (ParseException ex) {
            Logger.getLogger(login1.class.getName()).log(Level.SEVERE, null, ex);
            responseData.put("result", false);
            responseData.put("description", "failure in parsing");
            
            return Response.status(201).entity(responseData.toJSONString()).build();
        } catch(SQLException e){
            System.out.println("sql error");
            return Response.status(201).entity(responseData.toJSONString()).build();
        }

        
    }
}
